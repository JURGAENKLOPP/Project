#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// Pin definitions
int TRIG_PIN = 2;
int ECHO_PIN = 3;
int IN1 = 4;
int IN2 = 5;
int ENA = 6;
int IN3 = 8;
int IN4 = 7;
int ENA3 = 9;

// Create an LCD object (address 0x27, 16 columns and 2 rows)
LiquidCrystal_I2C lcd(0x27, 16, 2);

void setup() {
  Serial.begin(9600);
  
  // Initialize the LCD
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("Initializing...");
  
  // Set pin modes
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(ENA, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  pinMode(ENA3, OUTPUT);
  
  delay(2000);  // Wait 2 seconds before starting
  lcd.clear();  // Clear the screen
}

void loop() {
  long duration, distance;
  
  // Trigger the ultrasonic sensor
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);
  
  // Read the echo
  duration = pulseIn(ECHO_PIN, HIGH);
  
  // Calculate distance in cm
  distance = (duration * 0.034) / 2;
  
  // Print distance to Serial Monitor and LCD
  Serial.print("Distance: ");
  Serial.println(distance);
  
  // Update LCD with distance
  lcd.setCursor(0, 0);
  lcd.print("Distance: ");
  lcd.print(distance);
  lcd.print(" cm   ");
  
  // If an object is detected within 20 cm
  if (distance < 20) {
    Serial.println("Object detected! Stopping the car.");
    lcd.setCursor(0, 1);
    lcd.print("Stopping car    "); // Display stopping message
    
    // Stop the car
    digitalWrite(IN1, LOW);
    digitalWrite(IN2, LOW);
    analogWrite(ENA, 0); // Ensure motor is stopped
    digitalWrite(IN3, LOW);
    digitalWrite(IN4, LOW);
    analogWrite(ENA3, 0); // Ensure second motor is stopped
  } else {
    Serial.println("Path is clear. Moving forward.");
    lcd.setCursor(0, 1);
    lcd.print("Moving forward  "); // Display moving forward message
    
    // Move forward
    digitalWrite(IN1, HIGH);
    digitalWrite(IN2, LOW);
    analogWrite(ENA, 255); // Full speed for first motor
    digitalWrite(IN3, HIGH);
    digitalWrite(IN4, LOW);
    analogWrite(ENA3, 255); // Full speed for second motor
  }
  
  delay(100); // Short delay
}
